import{_ as e,o as s,c as a,a as l}from"./app.5d3992c1.js";const o="/assets/23.2e440e50.jpg",t="/assets/24.14c48d1d.jpg",c="/assets/25.64ca9545.jpg",n="/assets/26.76cc38c0.jpg",p="/assets/27.a78c0cfe.jpg",r="/assets/28.abace371.jpg",i="/assets/29.9b9324c4.jpg",d="/assets/30.6b32c4e3.jpg",k=JSON.parse('{"title":"Github 如何提交 PR？","description":"","frontmatter":{},"headers":[{"level":2,"title":"Hello","slug":"hello","link":"#hello","children":[]},{"level":2,"title":"Fork 仓库","slug":"fork-仓库","link":"#fork-仓库","children":[]},{"level":2,"title":"Clone 仓库","slug":"clone-仓库","link":"#clone-仓库","children":[]},{"level":2,"title":"Git commit","slug":"git-commit","link":"#git-commit","children":[]},{"level":2,"title":"Pull Requests","slug":"pull-requests","link":"#pull-requests","children":[]},{"level":2,"title":"避免分支冲突","slug":"避免分支冲突","link":"#避免分支冲突","children":[]}],"relativePath":"article/article/article-13.md"}'),h={name:"article/article/article-13.md"},u=l('<h1 id="github-如何提交-pr" tabindex="-1">Github 如何提交 PR？ <a class="header-anchor" href="#github-如何提交-pr" aria-hidden="true">#</a></h1><h2 id="hello" tabindex="-1">Hello <a class="header-anchor" href="#hello" aria-hidden="true">#</a></h2><p>大家好，我是<a href="https://github.com/Tyh2001" target="_blank" rel="noreferrer">田同学</a>，大家可以加我微信 <code>VirgoTyh</code> 一起共同学习。</p><p><code>PR</code> 全称：<code>Pull Request</code>，提交了 <code>PR</code> 之后那么你就会成为贡献者其中的一员了，下面这篇文章向大家介绍一下 <code>Github</code> 上提交 <code>PR</code> 的方式</p><h2 id="fork-仓库" tabindex="-1">Fork 仓库 <a class="header-anchor" href="#fork-仓库" aria-hidden="true">#</a></h2><p>首先你需要进入你想要参与贡献的仓库，点击右上角的 <code>Fork</code> 按钮</p><p><img src="'+o+'" alt=""></p><p>点击 <code>Fork</code> 之后会有接下来的提示，直接点击 <code>Create Fork</code> 即可</p><p><img src="'+t+'" alt=""></p><p>这样你的账号上就会有一个和原仓库一模一样的仓库了，就可以进行修改了</p><p><img src="'+c+'" alt=""></p><h2 id="clone-仓库" tabindex="-1">Clone 仓库 <a class="header-anchor" href="#clone-仓库" aria-hidden="true">#</a></h2><p><code>Fork</code> 完之后，你就可以像 <code>Close</code> 自己的仓库一样，将仓库 <code>Clone</code> 到本地，就可以本地进行修改或运行了</p><p><img src="'+n+`" alt=""></p><h2 id="git-commit" tabindex="-1">Git commit <a class="header-anchor" href="#git-commit" aria-hidden="true">#</a></h2><p>在本地修改好的项目，可以按照正常流程直接推送到仓库</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">push</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"></span></code></pre></div><h2 id="pull-requests" tabindex="-1">Pull Requests <a class="header-anchor" href="#pull-requests" aria-hidden="true">#</a></h2><p>推送到远程仓库之后，需要进入项目操作栏的 <code>Pull Requests</code> 菜单中，点击 <code>New pull requests</code> 发起一个新的 <code>PR</code></p><p><img src="`+p+'" alt=""></p><p>之后再点击 <code>Create pull requests</code> 创建拉取请求</p><p><img src="'+r+'" alt=""></p><p>最后输入标题和信息之后，即可点击 <code>Create pull requests</code>，便可以提交 <code>PR</code> 了</p><p><img src="'+i+'" alt=""></p><h2 id="避免分支冲突" tabindex="-1">避免分支冲突 <a class="header-anchor" href="#避免分支冲突" aria-hidden="true">#</a></h2><p>在每次提交 <code>PR</code> 之前，需要保证你拉取的代码必须是最新的，可以在修改之前先拉取一次最新的代码</p><p>拉取最新的代码可以在仓库的 <code>Fetch upstream</code> 选线中，点击 <code>Fetch and merge</code> 进行同步</p><p><img src="'+d+'" alt=""></p>',28),m=[u];function _(g,y,B,D,C,f){return s(),a("div",null,m)}const E=e(h,[["render",_]]);export{k as __pageData,E as default};
