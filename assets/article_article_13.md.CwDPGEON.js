import{_ as e,c as s,o as a,ap as t}from"./chunks/framework.Dklddx0T.js";const i="/assets/9.DwZa_ieJ.jpg",l="/assets/10.D53R9vir.jpg",o="/assets/11.jtA0BKmm.jpg",r="/assets/12.kWjtJ0ii.jpg",p="/assets/13.CHjhDI0R.jpg",n="/assets/14.BE8FxRW1.jpg",c="/assets/15.DdvvnuJu.jpg",d="/assets/16.PN5vy9p_.jpg",f=JSON.parse('{"title":"Github 如何提交 PR？","description":"","frontmatter":{},"headers":[],"relativePath":"article/article/13.md","filePath":"article/article/13.md","lastUpdated":1724121366000}'),h={name:"article/article/13.md"},u=t('<h1 id="github-如何提交-pr" tabindex="-1">Github 如何提交 PR？ <a class="header-anchor" href="#github-如何提交-pr" aria-label="Permalink to &quot;Github 如何提交 PR？&quot;">​</a></h1><h2 id="hello" tabindex="-1">Hello <a class="header-anchor" href="#hello" aria-label="Permalink to &quot;Hello&quot;">​</a></h2><p>大家好，我是<a href="https://github.com/Tyh2001" target="_blank" rel="noreferrer">田同学</a>，大家可以加我微信 <code>T2000000000000000001</code> 一起共同学习。</p><p><code>PR</code> 全称：<code>Pull Request</code>，提交了 <code>PR</code> 之后那么你就会成为贡献者其中的一员了，下面这篇文章向大家介绍一下 <code>Github</code> 上提交 <code>PR</code> 的方式</p><h2 id="fork-仓库" tabindex="-1">Fork 仓库 <a class="header-anchor" href="#fork-仓库" aria-label="Permalink to &quot;Fork 仓库&quot;">​</a></h2><p>首先你需要进入你想要参与贡献的仓库，点击右上角的 <code>Fork</code> 按钮</p><p><img src="'+i+'" alt=""></p><p>点击 <code>Fork</code> 之后会有接下来的提示，直接点击 <code>Create Fork</code> 即可</p><p><img src="'+l+'" alt=""></p><p>这样你的账号上就会有一个和原仓库一模一样的仓库了，就可以进行修改了</p><p><img src="'+o+'" alt=""></p><h2 id="clone-仓库" tabindex="-1">Clone 仓库 <a class="header-anchor" href="#clone-仓库" aria-label="Permalink to &quot;Clone 仓库&quot;">​</a></h2><p><code>Fork</code> 完之后，你就可以像 <code>Close</code> 自己的仓库一样，将仓库 <code>Clone</code> 到本地，就可以本地进行修改或运行了</p><p><img src="'+r+`" alt=""></p><h2 id="git-commit" tabindex="-1">Git commit <a class="header-anchor" href="#git-commit" aria-label="Permalink to &quot;Git commit&quot;">​</a></h2><p>在本地修改好的项目，可以按照正常流程直接推送到仓库</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;xxx&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="pull-requests" tabindex="-1">Pull Requests <a class="header-anchor" href="#pull-requests" aria-label="Permalink to &quot;Pull Requests&quot;">​</a></h2><p>推送到远程仓库之后，需要进入项目操作栏的 <code>Pull Requests</code> 菜单中，点击 <code>New pull requests</code> 发起一个新的 <code>PR</code></p><p><img src="`+p+'" alt=""></p><p>之后再点击 <code>Create pull requests</code> 创建拉取请求</p><p><img src="'+n+'" alt=""></p><p>最后输入标题和信息之后，即可点击 <code>Create pull requests</code>，便可以提交 <code>PR</code> 了</p><p><img src="'+c+'" alt=""></p><h2 id="避免分支冲突" tabindex="-1">避免分支冲突 <a class="header-anchor" href="#避免分支冲突" aria-label="Permalink to &quot;避免分支冲突&quot;">​</a></h2><p>在每次提交 <code>PR</code> 之前，需要保证你拉取的代码必须是最新的，可以在修改之前先拉取一次最新的代码</p><p>拉取最新的代码可以在仓库的 <code>Fetch upstream</code> 选线中，点击 <code>Fetch and merge</code> 进行同步</p><p><img src="'+d+'" alt=""></p>',28),m=[u];function k(_,g,F,b,C,P){return a(),s("div",null,m)}const R=e(h,[["render",k]]);export{f as __pageData,R as default};
