import{_ as s,o as e,c as a,a as n}from"./app.e0b09ca0.js";const F=JSON.parse('{"title":"Vite + TS 配置 .env 环境文件","description":"","frontmatter":{},"headers":[{"level":2,"title":"新建配置文件","slug":"新建配置文件","link":"#新建配置文件","children":[]},{"level":2,"title":"写入内容","slug":"写入内容","link":"#写入内容","children":[]},{"level":2,"title":"TypeScript 智能提示","slug":"typescript-智能提示","link":"#typescript-智能提示","children":[]},{"level":2,"title":"获取变量","slug":"获取变量","link":"#获取变量","children":[]},{"level":2,"title":"官方文档参考","slug":"官方文档参考","link":"#官方文档参考","children":[]}],"relativePath":"article/article/10.md"}'),l={name:"article/article/10.md"},t=n(`<h1 id="vite-ts-配置-env-环境文件" tabindex="-1">Vite + TS 配置 .env 环境文件 <a class="header-anchor" href="#vite-ts-配置-env-环境文件" aria-hidden="true">#</a></h1><h2 id="新建配置文件" tabindex="-1">新建配置文件 <a class="header-anchor" href="#新建配置文件" aria-hidden="true">#</a></h2><p>在项目的 <code>根目录</code> 下新建 <code>.env.development</code> 和 <code>.env.production</code> 两个配置文件</p><p>文件的名称必须这样定义，否则读取不到</p><ul><li><code>.env.development</code> 是开发环境使用的配置文件</li><li><code>.env.production</code> 是生产环境中使用的配置文件</li></ul><h2 id="写入内容" tabindex="-1">写入内容 <a class="header-anchor" href="#写入内容" aria-hidden="true">#</a></h2><p>下面使用接口的 <code>baseUrl</code> 来举例，内部可以定义一些变量，但是变量名必须是以 <code>VITE_</code> 为开头的名称</p><p>.env.development</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">VITE_BASE_URL = &#39;http://123.123.2.122:8888/api&#39;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="typescript-智能提示" tabindex="-1">TypeScript 智能提示 <a class="header-anchor" href="#typescript-智能提示" aria-hidden="true">#</a></h2><p>在 <code>src</code> 下新建 <code>env.d.ts</code> 加入下面内容，使以 <code>VITE_</code> 为前缀的用户自定义环境变量的 <code>TypeScript</code> 加入智能提示</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/// </span><span style="color:#89DDFF;font-style:italic;">&lt;</span><span style="color:#F07178;font-style:italic;">reference</span><span style="color:#89DDFF;font-style:italic;"> </span><span style="color:#C792EA;font-style:italic;">types</span><span style="color:#89DDFF;font-style:italic;">=</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#C3E88D;font-style:italic;">vite/client</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#89DDFF;font-style:italic;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ImportMetaEnv</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">readonly</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">VITE_APP_TITLE</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 更多环境变量...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ImportMeta</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">readonly</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ImportMetaEnv</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="获取变量" tabindex="-1">获取变量 <a class="header-anchor" href="#获取变量" aria-hidden="true">#</a></h2><p>在配置文件中的变量可以在全局任意地方获取，获取方式为 <code>i<wbr>mport.meta.env.VITE_xxx</code></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">VITE_BASE_URL)</span></span>
<span class="line"></span></code></pre></div><h2 id="官方文档参考" tabindex="-1">官方文档参考 <a class="header-anchor" href="#官方文档参考" aria-hidden="true">#</a></h2><ul><li><a href="https://cn.vitejs.dev/guide/env-and-mode.html#production-replacement" target="_blank" rel="noreferrer">环境变量和模式</a></li></ul>`,17),o=[t];function p(c,r,i,d,y,h){return e(),a("div",null,o)}const B=s(l,[["render",p]]);export{F as __pageData,B as default};
